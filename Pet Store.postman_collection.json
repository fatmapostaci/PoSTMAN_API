{
	"info": {
		"_postman_id": "445e3e4a-78d8-4a43-8045-1936e8f4cc06",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46061497",
		"_collection_link": "https://fatma-3479341.postman.co/workspace/FSAE_DE_25~eacf1f85-088d-4742-ac9f-27bd3eadf759/collection/46061497-445e3e4a-78d8-4a43-8045-1936e8f4cc06?action=share&source=collection_link&creator=46061497"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "GET Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{id20mila}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{id20mila}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Pet Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// Validate the response time is less than 1000ms\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"// Parse the response body\r",
									"const response = pm.response.json();\r",
									"\r",
									"// Check if the response body has the required properties\r",
									"pm.test(\"Response body has required properties\", function () {\r",
									"    pm.expect(response).to.have.property('code');\r",
									"    pm.expect(response).to.have.property('type');\r",
									"    pm.expect(response).to.have.property('message');\r",
									"});\r",
									"\r",
									"// Validate the 'type' property is a string\r",
									"pm.test(\"Type property is a string\", function () {\r",
									"    pm.expect(response.type).to.be.a('string');\r",
									"});\r",
									"\r",
									"// Validate the 'message' property is a string\r",
									"pm.test(\"Message property is a string\", function () {\r",
									"    pm.expect(response.message).to.be.a('string');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{id20mila}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{id20mila}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData.name);\r",
									"console.log(jsonData.category.name);\r",
									"console.log(jsonData.tags[0].name);\r",
									"\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"id\", \"30\");\r",
									"console.log(pm.collectionVariables.get(\"baseUrl\"))\r",
									"console.log(\"hello\")\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text).to.include(\"doggie\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"status test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"\r",
									";"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{id20mila}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"something\",\"second thing\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string1\"\r\n    },\r\n        {\r\n      \"id\": 1,\r\n      \"name\": \"string2\"\r\n    },\r\n        {\r\n      \"id\": 2,\r\n      \"name\": \"string3\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test for successful status code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Test for response time\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// Test for content-type header\r",
									"pm.test(\"Content-Type is present and is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{id20mila}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"tet\"\r\n  },\r\n  \"name\": \"test\",\r\n  \"photoUrls\": [\r\n    \"something\",\"second thing\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string1\"\r\n    },\r\n        {\r\n      \"id\": 1,\r\n      \"name\": \"string2\"\r\n    },\r\n        {\r\n      \"id\": 2,\r\n      \"name\": \"string3\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{id20mila}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{id20mila}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get after delete",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "get after delete",
							"host": [
								"get after delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "- Returns a map of status codes to quantities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/inventory",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/2",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 20,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2025-06-20T13:57:39.085Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order/9223372036854745905",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order",
								"9223372036854745905"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "https://petstore.swagger.io/v2/user/createWithList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/user/createWithList",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"user",
								"createWithList"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/user/createWithList' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]'"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "id20mila",
			"value": "20",
			"type": "default"
		},
		{
			"key": "id",
			"value": ""
		}
	]
}